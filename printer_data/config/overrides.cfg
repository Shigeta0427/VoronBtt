############################################# \
######## USER CONFIG OVERRIDES FILE #########  + --> This will help you personalize my config to your printer :)
############################################# /

# This file is yours! Feel free to edit it in order to include all the needed
# things to adapt my generic config to your machine. This file will not be erased
# when updating the config using moonraker and it will be kept as you've set it.
# You can change every section of the config. You can also add some new custom macros, etc...
# The corresponding documentation can be found in: docs > overrides.md

### Also, keep in mind: if you use a multi-MCU config such as the old school double SKRs or a CANbus toolhead
### board, you will need to specify which components are connected to which board in your own mcu.cfg file!
### Example: if something is connected to the toolhead MCU, you should use "config_pin: toolhead:PIN_NAME".

#> Main control MCUs are called "mcu" (and "secondary" when using a double MCU configuration)
#> Toolhead CANboard MCUs are called "toolhead"
#> MMU/ERCF MCUs are called "mmu" 

# ------------------------------------------------------------------------------------------


#-------------------------#
#   START_PRINT SEQUENCE  #
#-------------------------#

## The START_PRINT sequence is modular and fully customizable. A default START_PRINT sequence is auto-populated based on
## your probe choice (TAP, Dockable, Inductive), but if for some reasons you still want to modify it, please uncomment the following 3
## lines to define a new `variable_startprint_actions`. You can use any number of action or even duplicate some actions if needed.
## Available actions: "bed_soak", "extruder_preheating", "chamber_soak", "extruder_heating", "tilt_calib", "z_offset", "bedmesh", "purge", "clean", "primeline"
##
[gcode_macro _USER_VARIABLES]
# variable_startprint_actions: "action1", "action2", ...
# gcode: # do not remove this line


#variable_startprint_actions: "action1"
#gcode:
# gcode_macro CLEAN_NOZZLE


[stepper_x]
position_min: -1
position_max: 350
position_endstop: 350

[stepper_y]
position_min: -1
position_max: 350 #352ノズルクリーンの関係で355を350に変更。
position_endstop: 350 #フロントパネルに当たるので352を350に変更
#352ノズルクリーンの関係で350を355に変更。https://www.printables.com/model/359645-bambu-lab-style-nozzle-wiper-2020-extrusion

#-------------------------#
#   EXTRUDER/BED PIDs     #
#-------------------------#

## Here is an example of some overrides for the PIDs. I put them here as almost everyone will use them,
## so just uncomment the following lines and change the values according to your own machine
[extruder]
#step_pin: E_STEP
#dir_pin: !E_DIR
#enable_pin: !E_ENABLE

#★プレッシャーアドバンス　2024-10-22　https://note.com/eitoku_note/n/n78f0d240940a
pressure_advance: 0.045


#PID_CALIBRATE HEATER=extruder TARGET=170
control: pid

#PID_CALIBRATE HEATER=extruder TARGET=200 でキャリブレーションして表示された値。
#https://www.obico.io/blog/klipper-pid-tuning/
pid_kp: 25.821
pid_ki: 2.326
pid_kd: 71.651

#★前のVORONの設定 2024-12-22　冬になり加熱エラーが起きるので上の値にしてみた。
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982


[heater_bed]
##	SSR Pin - BED_OUT
heater_pin: PA1
sensor_type: Generic 3950 #NTC 100K beta 3950  #ATC Semitec 104GT-2　#
sensor_pin: PF4
##	Adjust Max Power so your heater doesn't warp your bed
max_power: 0.6
min_temp: 0
max_temp: 115
control: pid

#PID_CALIBRATE HEATER=heater_bed TARGET=60　でキャリブレーションして表示された値。
#https://www.obico.io/blog/klipper-pid-tuning/
pid_Kp: 40.366 
pid_Ki: 1.288 
pid_Kd: 316.370

#control: pid
#pid_kp: 38.771
#pid_ki: 1.746
#pid_kd: 215.177


#-------------------------#
#   Z MOTORS DIRECTION    #
#-------------------------#

## Here is an example of some overrides for the motor directions as it's a pretty common one. If you need
## to invert the Z1 or Z3 motor direction on your machine, just uncomment the following lines.https://www.klipper3d.org/Config_Reference.html
[stepper_z1]
 dir_pin: !Z1_DIR

[stepper_z3]
dir_pin: !Z3_DIR


#-------------------------#
#   Probe Offsets         #
#-------------------------#

## Here is an example of some overrides for bed probes. These frequently have calibrated offsets for xyz,
## and many will need them during setup. If you need to set these, just uncomment the following lines.


[probe]
#pin: ^PROBE_INPUT
#x_offset: 0
#y_offset: 0
#z_offset:  -1.260 #★probe_calibrate値(bedmesh:bicubic)　：ProbeCALBRATEだとZ-offsetは-1.431がベストだが、実際印刷すると遠すぎる。 -1.3は線が切れる。-1.275だと線が切れる。　-1.260程度が妥当　-1.250は良いがすべての線がつながっている。　-1.2はBEDに押し付けた感じになる。　-0.5は近すぎる。
#z_offset:  -1.300 #★probe_calibrate値(bedmesh:lagrange)　：ProbeCALBRATEだとZ-offsetは-1.431 -1.260程度が妥当できれいに出たけど少し近いかな。 -1.300位が良さそう。
                   #Z_OFFSET = z±0からtap変わる値＋PROBE_CALIBRATEの値
#z_offset:  -1.65 #-1.50-(+0.15)=-1.55にした #ノズルとBEDが擦れる場合はメインセイル上のZオフセットの値を例えば[Z＋0.15]ならその値を引く。
z_offset:  -1.50
                #Z-offsetが-1.45の値で紙を敷いたら+0.15程度がベストだったので、‐1.60とした。（マイナス値程ベッドからノズルが離れる）
                #+1.45の高さでプローブと紙の高さがベストだったので、オフセット値を-1.45とした。
                #-2.95　 # 紙を置いた高さが1.40で、青点滅が-1.55なので、-2.95にした。→印刷すると2.95mmほど高い位置で印刷した。
　　　　　　　　　#✕#-3.10にしたところ 逆に広がったので、逆数にし-0.1にした。#zoffset が-1.50 だったので既に設定されていた値　-1.60　に-1.50を足した。3.10　#-1.60
speed: 10
lift_speed: 15
samples: 2 #2
#samples_result: median
sample_retract_dist: 3.0
#samples_tolerance: 0.005
samples_tolerance_retries: 2


#[stepper_z]
#endstop_pin: probe:z_virtual_endstop

#-------------------------#
# 　　　  bed_mesh         #
#-------------------------#
[bed_mesh]
speed: 350
horizontal_move_z: 4
mesh_min: 25, 25
mesh_max: 325, 325
probe_count: 9 , 9 #9, 9
fade_start: 0.6
fade_end: 10.0
algorithm:  bicubic #lagrange
zero_reference_position: 175, 175

#[gcode_macro _ADAPTIVE_MESH_VARIABLES]
#variable_ready: False
#variable_do_mesh: False
#variable_do_nominal: False
#variable_mesh_min: 0,0
#variable_mesh_max: 0,0
#variable_probe_count: 0,0
#variable_algo: "bicubic"

#-------------------------#
# 　　　  FAN              #
#-------------------------#

[temperature_fan rpi_fan]
#pin: HOST_CONTROLLER_FAN
#kick_start_time: 0.5
#max_speed: 0.75
target_temp: 45
#min_temp: 10
#max_temp: 95
#control: watermark
#sensor_type: temperature_host

[fan_generic exhaust_fan]
#[temperature_fan chamber]
##  Exhaust fan - In E2 OUT Positonエンクロージャ背面の排気ファンはボードE2OUTへ接続します
pin: PD13
max_power: 1.0
shutdown_speed: 0.0               #MCUのソフトエラーなどが発生した際の回転速度を指定できます。ここでは0になっています。
kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 60
#fan_speed: 0.8
#kick_start_time: 5.0
#cycle_time:0.01
#off_below:0.1
#sensor_type: ATC Semitec 104GT-2
#sensor_pin: PF5
#min_temp: 0
#max_temp: 70
#target_temp: 35.0
#control: watermark
#control: pid
#hardware_pwm: true
#pid_kp: 40.0
#pid_ki: 5.0
#pid_kd: 0.01

#[gcode_macro M141]
#gcode:
#SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=chamber TARGET={params.S}

[controller_fan controller_fan]
pin: CONTROLLER_FAN
kick_start_time: 0.5
max_power: 0.8
fan_speed: 0.8
idle_timeout: 60

#-------------------------#
#  temperature_sensor     #
#-------------------------#
[temperature_sensor Chamber]
#sensor_type: ATC Semitec 104GT-2
#sensor_type: ATC Semitec 104NT-4-R025H42G
#sensor_type: TDK NTCG104LH104JT1
#sensor_type: Generic 3950
#sensor_type: Honeywell 100K 135-104LAG-J01
#sensor_type: NTC 100K MGB18-104F39050L32
#sensor_type: SliceEngineering 450
#sensor_type: TDK NTCG104LH104JT1
#sensor_type: PT1000
#sensor_type: PT100 INA826
#sensor_type:
#sensor_type:

#sensor_type: EPCOS 100K B57560G104F
#sensor_pin: T1
#Chamber Temperature - T1

sensor_type: CMFB103F3950FANT
sensor_pin: PF5
min_temp: 0
max_temp: 60
gcode_id: chamber_th


#-------------------------#
# 　　　  MACRO            #
#-------------------------#

[gcode_macro SWIPE] #2020年押し出し用バンブーラボノズルワイパー
  variable_start_x: 75 ##YOUR X POSITION##
  variable_start_y: 356 ##YOUR Y POSITION##
  variable_start_z: 4 #シリコンカバーのため7.00を10にした #7.60 ##YOUR Z POSITION of the Nozzle a bit lower##

  ## my location, but i moved the bed 6mm forward
  #variable_start_x: 80
  #variable_start_y: 355
  #variable_start_z: 9
  ##

variable_wipe_dist: 200
variable_wipe_qty: 4
variable_wipe_spd: 150
variable_raise_distance: 10
gcode:
  {% if "xyz" not in printer.toolhead.homed_axes %}
     G28
   {% endif %}
   
   G90                                            # absolute positioning
   G1 Z4 F1500
   G1 X10 F1500
   ## Move nozzle to start position
   G1 X{start_x} F6000
   G1 Y{start_y} F6000
   G1 Z{start_z} F1500

   ## Wipe nozzle
   {% for wipes in range(1, (wipe_qty + 1)) %}
     G1 X{start_x + wipe_dist} F{wipe_spd * 60}
     G1 X{start_x} F{wipe_spd * 60}
   {% endfor %}

  ## Raise nozzle
   G1 Z{raise_distance}
   G1 X175 Y175 F6000
   G1 E-5.0 F3600 #追記
 
[gcode_macro CG28] #2020年押し出し用バンブーラボノズルワイパー
  gcode:
   {% if "x" not in printer.toolhead.homed_axes or "y" not in printer.toolhead.homed_axes or "z" not in printer.toolhead.homed_axes %}
   G28
   {% endif %}



# ノズルを交換するためにホットエンドを250℃に加熱して、
# 温度上昇を待たずにヘッドをX軸-5mm、Y軸ホーム位置、Z軸180mmの座標に移動します。
[gcode_macro NOZZLE_CHANGE]
gcode:
   M104 S250
   G90
   G28
   G1 X-5.0 F3000
   G1 Z180 F1000

#-------------------------#
# 　　　 backup            #
#-------------------------#
#[gcode_macro update_git]
#gcode:
# RUN_SHELL_COMMAND CMD=update_git_script

#[gcode_shell_command update_git_script]
#command: bash /home/pi/klipper-backup/script.sh
#timeout: 90
#verbose: True
#-------------------------#

[gcode_macro update_git]
gcode:
    {% set message = params.MESSAGE|default() %}
    {% if message %}
        RUN_SHELL_COMMAND CMD=update_git_script_message PARAMS="'{params.MESSAGE}'"
    {% else %}
        RUN_SHELL_COMMAND CMD=update_git_script
    {% endif %}

[gcode_shell_command update_git_script]
command: bash -c "bash $HOME/klipper-backup/script.sh"
timeout: 90.0
verbose: True

[gcode_shell_command update_git_script_message]
command: bash -c "bash $HOME/klipper-backup/script.sh -c \"$0\""
timeout: 90.0
verbose: True


[gcode_macro CLEAN_NOZZLE]
variable_start_x: 320 # starting position - offset a bit to the right from the brush
variable_start_y: 345 # starting Y position - offset a bit to the front of the brush
variable_start_z: 4   #starting Z height. This should barely touch the surface of the brush
variable_x_min: 260     #left side of the brush 
variable_x_max: 326     #right side of the brush
variable_y_min: 340 #front side of the brush - make sure the nozzle is over the last line of bristles 
variable_y_max: 348  #rear side of the brush - make sure the nozzle is over the first line of bristles
variable_z1: 3.7 # second z height of the nozzle over the brush - this should be with the nozzle slightly sunk in
variable_z2: 3.0 # third z height of the nozzle over the brush - this should be with the nozzle fully sunk into the brush, but not touching the bottom of it.
variable_wipe_qty: 1 #how many times to run the cleaning sequence
variable_wipe_spd: 200 #cleaning speed
variable_raise_distance: 30 # z height after cleaning is done
gcode: 
  {% if "xyz" not in printer.toolhead.homed_axes %}
  G28 
  {% endif %}

  G90  # absolute positioning
### Move nozzle to start position
  G1 X{start_x} Y{start_y} F9000
  G1 X{x_max} Y{y_min} F9000
  G1 Z{start_z} F1500
### Wipe nozzle
  {% for wipes in range(1, (wipe_qty + 1)) %} #wipe left and right
  G1 Y{y_min} F{wipe_spd * 60}
  G1 X{x_min} F{wipe_spd * 60}
  G1 X{start_x} F{wipe_spd * 60}
  
  G1 Y{y_max} F{wipe_spd * 60}
  G1 X{x_min} F{wipe_spd * 60}
  G1 X{start_x} F{wipe_spd * 60}
  G1 Z{z1} F1500
  G1 Y{y_min} F{wipe_spd * 60}
  G1 X{x_min} F{wipe_spd * 60}
  G1 X{start_x} F{wipe_spd * 60}
  
  G1 Y{y_max} F{wipe_spd * 60}
  G1 X{x_min} F{wipe_spd * 60}
  G1 X{start_x} F{wipe_spd * 60}
  G1 Z{z2} F1500
  G1 Y{y_min} F{wipe_spd * 60}
  G1 X{x_min} F{wipe_spd * 60}
  G1 X{start_x} F{wipe_spd * 60}
  
  G1 Y{y_max} F{wipe_spd * 60}
  G1 X{x_min} F{wipe_spd * 60}
  G1 X{start_x} F{wipe_spd * 60}
  
  G1 Z{start_z} F1500
  {% endfor %}

  {% for wipes in range(1, (wipe_qty + 1)) %} #wipe diagonally
  G1 Z{start_z} F1500
  G1 X{x_min} Y{y_min} F{wipe_spd * 60}
  G1 X{x_max} Y{y_max} F{wipe_spd * 60}
  G1 X{x_min} Y{y_min} F{wipe_spd * 60}
  G1 X{x_max} Y{y_max} F{wipe_spd * 60}
  G1 Z{z1} F1500
  G1 X{x_min} Y{y_min} F{wipe_spd * 60}
  G1 X{x_max} Y{y_max} F{wipe_spd * 60}
  G1 X{x_min} Y{y_min} F{wipe_spd * 60}
  G1 X{x_max} Y{y_max} F{wipe_spd * 60}
  G1 Z{z1} F1500
  G1 X{x_min} Y{y_max} F{wipe_spd * 60}
  G1 X{x_max} Y{y_min} F{wipe_spd * 60}
  G1 X{x_min} Y{y_max} F{wipe_spd * 60}
  G1 X{x_max} Y{y_min} F{wipe_spd * 60}
  G1 Z{z2} F1500
  G1 X{x_min} Y{y_min} F{wipe_spd * 60}
  G1 X{x_max} Y{y_max} F{wipe_spd * 60}
  G1 X{x_min} Y{y_min} F{wipe_spd * 60}
  G1 X{x_max} Y{y_max} F{wipe_spd * 60}
  G1 X{x_min} Y{y_max} F{wipe_spd * 60}
  G1 X{x_max} Y{y_min} F{wipe_spd * 60}
  G1 X{x_min} Y{y_max} F{wipe_spd * 60}
  G1 X{x_max} Y{y_min} F{wipe_spd * 60}
  G1 X{start_x} Y{y_min} F{wipe_spd * 60}
  
  G1 Z{start_z} F1500
  {% endfor %}

  G1 X{start_x} Y{start_y} F9000 #go back to starting position
## Raise nozzle
  G1 Z{raise_distance} 

[gcode_macro SET_MATERIAL]
#Prusa Slicerは開始Gコードを追加
#SET_MATERIAL MATERIAL='{filament_type[initial_extruder]}'

gcode:
  {% set Material = params.MATERIAL|default('PLA')|string %}
  {% if MATERIAL == 'PLA' %}
    SET_FAN_SPEED FAN=Exhaust_Fan SPEED=.75
  {% elif MATERIAL == 'ABS' %}
    SET_FAN_SPEED FAN=Exhaust_Fan SPEED=.0
  {% elif MATERIAL == 'ASA' %}
    SET_FAN_SPEED FAN=Exhaust_Fan SPEED=.0
  {% else %}
    SET_FAN_SPEED FAN=Exhaust_Fan SPEED=.5
  {% endif %}
 
  
[gcode_macro PA_CAL]
# Pressure Advance Simple Test macro, using .4mm nozzle.
# Usage: PA_CAL BED=100 EXTRUDER=240 PA_START=0.03 PA_STEP=0.002
# Or with no parameters as: PA_CAL, this would execute as
# PA_CAL BED=100 EXTRUDER=250 PA_START=0.0 PA_STEP=0.005
# First prints a line with current set PA, then prints 20 line segments
# starting with PA_START, increasing each line by PA_STEP.
# Based http://realdeuce.github.io/Voron/PA/pressure_advance.html
description: Tune Pressure Advance

gcode:
    {% set BED = params.BED|default(60)|float %}
    {% set EXTRUDER = params.EXTRUDER|default(210)|float %}
    {% set PA_START = params.PA_START|default(0.0)|float %}
    {% set PA_STEP = params.PA_STEP|default(0.005)|float %}
    START_PRINT BED_TEMP={BED} EXTRUDER_TEMP={EXTRUDER}

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set offset_x = (max_x-80) / 2|float %}
    {% set offset_y = (max_y-110) / 2|float %}
    G21 ; Millimeter units
    G90 ; Absolute XYZ
    M83 ; Relative E
    SET_VELOCITY_LIMIT ACCEL=3000 ACCEL_TO_DECEL=1500
    G92 E0
    M106 S0 

    G1 X{offset_x} Y{offset_y} F30000            ; move to start position
    G1 Z0.25 F300                 ; move to layer height
    G1 E0.75 F1800                ; un-retract
    G1 X{offset_x+20} Y{offset_y} E0.91798 F300     ; print line part one
    G1 X{offset_x+60} Y{offset_y} E1.83596 F9000    ; print line part two
    G1 X{offset_x+80} Y{offset_y} E0.91798 F300     ; print line part three
    G1 E-0.75 F1800               ; retract
    G1 Z1 F300                    ; Move above layer height  

    {% for i in range(0, 20) %}
      SET_PRESSURE_ADVANCE ADVANCE={PA_START + (i * PA_STEP)} ; set Pressure Advance
      M117 Testing Pressure Advance at: {PA_START + (i * PA_STEP)}
      G1 X{offset_x} Y{offset_y+15+(5*i)} F30000            ; move to start position
      G1 Z0.25 F300                          ; move to layer height
      G1 E0.75 F1800                         ; un-retract
      G1 X{offset_x+20} Y{offset_y+15+(5*i)} E0.91798 F300     ; print line part one
      G1 X{offset_x+60} Y{offset_y+15+(5*i)} E1.83596 F9000    ; print line part two
      G1 X{offset_x+80} Y{offset_y+15+(5*i)} E0.91798 F300     ; print line part three
      G1 E-0.75 F1800                        ; retract
      G1 Z1 F300                             ; Move above layer height  
    {% endfor %}

    END_PRINT







